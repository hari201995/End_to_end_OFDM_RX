function preamble_seq = preamble()

%%generates the preamble for 802.11 using S_seq and L_seq. 
% total length of preamble : 64 samples of STS + 224 (2*64+32) samples of
% LTS = 288 samples. 

%% STS preamble generation. 
% generated by taking the IFFT of the 
% S(–26,26) = √(13/6) × {0,0,1+j,0,0,0,–1–j,0,0,0,1+j,0,0,0,–1–j,0,0,0,–1–j,0,0,0,1+j,0,0,0,0,0, 
% 0,0,–1–j,0,0,0,–1–j,0,0,0,1+j,0,0,0,1+j,0,0,0,1+j,0,0,0,1+j,0,0} (17-6)
% The multiplication by a factor of √(13/6) is in order to normalize the average power of the resulting OFDM
% symbol, which utilizes 12 out of 52 subcarriers.

S_seq = sqrt(13/6)*[0,0,1+1i,0,0,0,-1-1i,0,0,0,1+1i,0,0,0,-1-1i,0,0,0,-1-1i,0,0,0,1+1i,0,0,0,0,0 ...
               0,0,-1-1i,0,0,0,-1-1i,0,0,0,1+1i,0,0,0,1+1i,0,0,0,1+1i,0,0,0,1+1i,0,0];

%performing 64 IFFT on S_seq
s_seq_ip = [S_seq(27),S_seq(28:53),zeros(1,11),S_seq(1:26)]; 
sts_ifft = ifft(s_seq_ip,64);

%performing concatenation of sts_ifft 1.5 times to reach repetition of 10
%times

sts_ifft =[sts_ifft sts_ifft];
sts_ifft = [sts_ifft sts_ifft(1:32)];
plot(abs(sts_ifft));
% STS FFT magnitude plot. 
sts_fft_data = fft(sts_ifft,256);
%%stem(abs(sts_ifft));

%% LTS preamble generation.
% Generated by taking the IFFT of the 
% L(-26, 26) = {1, 1, –1, –1, 1, 1, –1, 1, –1, 1, 1, 1, 1, 1, 1, –1, –1, 1, 1, –1, 1, –1, 1, 1, 1, 1, 0,
% 1, –1, –1, 1, 1, –1, 1, –1, 1, –1, –1, –1, –1, –1, 1, 1, –1, –1, 1, –1, 1, –1, 1, 1, 1, 1}

L_seq =[1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 0, ... 
1, -1, -1, 1, 1, -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, -1, 1, -1, 1, 1, 1, 1];

%performing 64 pt IFFT on L_seq
L_seq_ip = [L_seq(27),L_seq(28:53),zeros(1,11),L_seq(1:26)]; 
lts_ifft = ifft(L_seq_ip,64);
lts_seq = horzcat(lts_ifft(33:64),lts_ifft,lts_ifft);
stem(abs(lts_seq));
%% concatenation of preamble. 

preamble_seq=horzcat(sts_ifft,lts_seq);

end